var
function
return
for
else
Logger.log();
const
new
function()
sheet
SpreadsheetApp.getActiveSpreadsheet();
spreadsheet.getRange().activate();
catch
form
case
try
r.getNumRows();
r.getValues();
response
break;
SpreadsheetApp.getActiveSpreadsheet().getSheetByName();
Date();
end
return;
while
s.getSheetByName();
pageToken
if(){
spreadsheet.getCurrentCell().setValue();
sh.getRange().setValue();
let
(){continue;}
Logger.log());
name
false;
the
Utilities.sleep();
spreadsheet
sh.getDataRange();
if()
.setTitle()
SpreadsheetApp.openById();
throw
requests
s.getDataRange();
.addItem()
title:
true;
for(){
{var
console.log();
user
name:
d[x][0];
Logger.log()
continue;
if(){continue;}
onOpen()
resource
i=d[x][0];
data
s.getRange().setValue();
title
result
value
url:baseUrl
ss.getSheetByName();
PropertiesService.getUserProperties();
s.addItem().addToUi();
range
maxResults:
try{
pageToken;
headers
email
null;
pageToken:
color
org
for()
Logger.log():
and
row
body
userProperties
FormApp.getActiveForm();
file
description:
type:
.addToUi();
SpreadsheetApp.getActiveSheet();
course
'https:
message
.build();
options
values
page
with
.setRequired();
list
objectId:
arr
arr.push();
properties
projectId
s1.getSheetByName();
key
url
true
text:
.setHelpText()
item
FormApp.openById();
id:
Date()
sheet.getRange().setValue();
event
start
submissionStatusWorksheet.getRange().setValue();
.setChoiceValues()
form.getItems();
SpreadsheetApp.getActive();
d[x][3];
date
s.getRange()).setBackground();
sheet.getRange();
PropertiesService.getDocumentProperties();
choices
Slides.Presentations.batchUpdate({
requests:
assignment
ids
sh.getRange().setValues();
{email:
toreturn
result;
Error();
userProperties.setProperty();
state:
char
triggers
this
().getBackground()
(){day
onOpen();
parent
1+x;
sortByDate();
userProperties.getProperty();
errorCode:
true);
eventObject.eventTitle
this;
unit:
.create();
DataStudioApp.createCommunityConnector();
Utilities.formatDate();
from
rows
expectToEqual();
presentation
presentationId);
SpreadsheetApp.create();
getAuthType()
html
subject
currentCell
spreadsheet.getCurrentCell();
spreadsheet.getSelection().getNextDataRange().activate();
currentCell.activateAsCurrentCell();
DriveApp.getFolderById();
unsubmittedWorksheet.getRange().getValue();
onInstall()
ScriptApp.deleteTrigger();
{name:
MailApp.sendEmail();
today
type
driveFile:
seconds:
spreadsheet.getActiveSheet();
.setTitle();
ScriptApp.newTrigger()
sheet.getDataRange().getValues();
sheet.getRange().getValue();
slide
workType:
maxPoints:
dueDate:
year:
month:
day:
dueTime:
hours:
switch
folder
s1.addItem().addToUi();
token
not
JSON.parse());
SpreadsheetApp.flush();
1);
sheet.getRange().setValues();
d[x][1];
group
your
materials:
Browser.msgBox();
ca.setColumnWidth();
ll.getRange().setValue();